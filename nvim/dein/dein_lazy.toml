[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
hook_post_source = '''
  if executable('rg')
    call denite#custom#var('file_rec', 'command', ['rg', '--files', '--glob', '!.git'])
    call denite#custom#var('grep', 'command', ['rg', '--threads', '1'])
    call denite#custom#var('grep', 'recursive_opts', [])
    call denite#custom#var('grep', 'final_opts', [])
    call denite#custom#var('grep', 'separetor', ['--'])
    call denite#custom#var('grep', 'default_opts', ['--vimgrep', '--no-heading'])
  else
  endif
  call denite#custom#map('insert', '<C-t>', '<denite:move_to_next_line>', 'noremap')
  call denite#custom#map('insert', '<C-n>', '<denite:move_to_previous_line>', 'noremap')
'''
hook_add = '''
  nnoremap <silent> <Leader>ub :<C-u>Denite buffer<CR>
  nnoremap <silent> <Leader>uf :<C-u>Denite file -buffer-name=files<CR>
  nnoremap <silent> <Leader>ur :<C-u>Denite register -buffer-name=register<CR>
  nnoremap <silent> <Leader>um :<C-u>Denite file_mru<CR>
  let g:denite_enable_start_insert = 1
  nnoremap <silent> <Leader>ug :<C-u>Denite grep -buffer-name=search-buffer-denite<CR>
  nnoremap <silent> <Leader>uug :<C-u>Denite -resume -buffer-name=search-buffer-denite<CR>
  nnoremap <silent> <Leader>uh :<C-u>Denite -resume -buffer-name=search-buffer-denite -select=-1 -immediately<CR>
  nnoremap <silent> <Leader>us :<C-u>Denite -resume -buffer-name=search-buffer-denite -select=+1 -immediately<CR>
'''

[[plugins]]
repo = 'pocari/vim-denite-emoji'
depends = ['denite.nvim', 'vim-emoji']
on_i = 1

[[plugins]]
repo = 'Shougo/neossh.vim'

[[plugins]]
repo = 'Shougo/vimshell.vim'
depends = ['vimproc.vim']


[[plugins]] # 補完
repo = 'Shougo/deoplete.nvim'
if = 'has("nvim")'
on_i = 1
hook_add = '''
  let g:deoplete#enable_at_startup = 1
  " <TAB> で補完を選択
  imap <silent><expr> <Tab> pumvisible() ? "\<C-n>" : neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
  smap <expr> <Tab> neosnippet#jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
hook_source = '''
  let g:deoplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'Shougo/neosnippet'
depends = ['neosnippet-snippets']
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_or_jump)
'''
on_i = 1
on_ft = ['snippet']

[[plugins]]
repo = 'junegunn/fzf'
if = 'executable("fzf")'
on_cmd = ['FZF','fzf#run']

[[plugins]]
repo = 'Shougo/neomru.vim'
on_path = '.*'

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_path = '.*'
on_i = 1

[[plugins]] # Codic
repo = 'koron/codic-vim'
on_cmd = 'Codic'

[[plugins]] # Emmet
repo = 'mattn/emmet-vim'
on_i = 1
hook_source = '''
  let g:user_emmet_mode = 'i'
  let g:user_emmet_leader_key='<C-E>'
  let g:use_emmet_complete_tag = 1
  let g:user_emmet_settings = {
  \   'variables': {
  \     'lang': "ja"
  \   },
  \   'indentation': '    '
  \ }
'''

[[plugins]] # EditorConfig
repo = 'editorconfig/editorconfig-vim'
on_path = '.*'

[[plugins]]
repo = 'scrooloose/syntastic'
on_i = 1
hook_add = '''
  let g:syntastic_enable_signs = 1
  let g:syntastic_always_populate_loc_list = 0
  let g:syntastic_auto_loc_list = 0
  let g:syntastic_check_on_open = 1
  let g:syntastic_javascript_checkers=['eslint']
'''

