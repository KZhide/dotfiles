#========================
# denite.nvim and sources
#========================

[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
hook_source = '''
  call denite#custom#option('default', {'split': 'floating'})
  if executable('rg')
    call denite#custom#var('file_rec', 'command', ['rg', '--files', '--glob', '!.git'])
    call denite#custom#var('grep', 'command', ['rg', '--threads', '1'])
    call denite#custom#var('grep', 'recursive_opts', [])
    call denite#custom#var('grep', 'final_opts', [])
    call denite#custom#var('grep', 'separetor', ['--'])
    call denite#custom#var('grep', 'default_opts', ['--vimgrep', '--no-heading'])
  else
  endif

  call denite#custom#map('insert', '<C-t>', '<denite:move_to_next_line>', 'noremap')
  call denite#custom#map('insert', '<C-n>', '<denite:move_to_previous_line>', 'noremap')
  call denite#custom#map('normal', 't', '<denite:move_to_next_line>', 'noremap')
  call denite#custom#map('normal', 'n', '<denite:move_to_next_line>', 'noremap')

  autocmd Filetype denite call s:denite_my_settings()
  function! s:denite_my_settings() abort
    nnoremap <silent><buffer><expr> <CR> denite#do_map('do_action')
    nnoremap <silent><buffer><expr> d denite#do_map('do_action', 'delete')
    nnoremap <silent><buffer><expr> p denite#do_map('do_action', 'preview')
    nnoremap <silent><buffer><expr> q denite#do_map('quit')
    nnoremap <silent><buffer><expr> i denite#do_map('open_filter_buffer')
    nnoremap <silent><buffer><expr> <Space> denite#do_map('toggle_select').'j'
  endfunction
'''
hook_add = '''
  nnoremap <silent> <Leader>ub :<C-u>Denite buffer<CR>
  nnoremap <silent> <Leader>uf :<C-u>Denite file -buffer-name=files<CR>
  nnoremap <silent> <Leader>ur :<C-u>Denite register -buffer-name=register<CR>
  nnoremap <silent> <Leader>um :<C-u>Denite file_mru<CR>
  let g:denite_enable_start_insert = 1
  nnoremap <silent> <Leader>ug :<C-u>Denite grep -buffer-name=search-buffer-denite<CR>
  nnoremap <silent> <Leader>uug :<C-u>Denite -resume -buffer-name=search-buffer-denite<CR>
  nnoremap <silent> <Leader>uh :<C-u>Denite -resume -buffer-name=search-buffer-denite -select=-1 -immediately<CR>
  nnoremap <silent> <Leader>us :<C-u>Denite -resume -buffer-name=search-buffer-denite -select=+1 -immediately<CR>
'''

[[plugins]]
repo = 'pocari/vim-denite-emoji'
depends = ['denite.nvim', 'vim-emoji']
on_source = ['denite.nvim']

[[plugins]]
repo = 'Shougo/neomru.vim'
depends = ['denite.nvim']
on_source = ['denite.nvim']
hook_add = '''
let g:neomru#file_mru_limit=200
'''

[[plugins]]
repo = 'iyuuya/denite-ale'
on_path = '.*'
depends = ['ale']

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_path = '.*'
depends = ['denite.nvim']

#========================

[[plugins]]
repo = 'Shougo/vimshell.vim'
depends = ['vimproc.vim']

[[plugins]]
repo = 'junegunn/fzf'
if = 'executable("fzf")'
on_cmd = ['FZF','fzf#run']

[[plugins]] # Codic
repo = 'koron/codic-vim'
on_cmd = 'Codic'

[[plugins]] # Emmet
repo = 'mattn/emmet-vim'
on_i = 1
hook_source = '''
  let g:user_emmet_mode = 'i'
  let g:user_emmet_leader_key='<C-E>'
  let g:use_emmet_complete_tag = 1
  let g:user_emmet_settings = {
  \   'variables': {
  \     'lang': "ja"
  \   },
  \   'indentation': '    '
  \ }
'''

[[plugins]] # EditorConfig
repo = 'editorconfig/editorconfig-vim'
on_i = 1

[[plugins]] # 補完
repo = 'Shougo/deoplete.nvim'
on_i = 1
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#file#enable_buffer_path = 1
  let g:deoplete#file#enable_smart_case = 1
  let g:deoplete#auto_complete_delay = 0
  let g:deoplete#enable_refresh_always = 1
  " <TAB> で補完を選択
  imap <silent><expr> <Tab> pumvisible() ? "\<C-n>" : neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
  smap <expr> <Tab> neosnippet#jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
hook_post_source = '''
call deoplete#custom#option('num_processes', 1)
'''

[[plugins]]
repo = 'fszymanski/deoplete-emoji'
on_ft = ['md']
